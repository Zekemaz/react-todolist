{"version":3,"sources":["Components/ToDoForm.js","Components/ToDoList.js","App.js","index.js"],"names":["ToDoForm","saveTodo","useState","value","setValue","className","onSubmit","e","preventDefault","onChange","target","variant","placeholder","autoFocus","maxLength","color","ToDoList","todos","deleteTodo","List","map","todo","index","ListItem","key","toString","dense","Checkbox","tabIndex","disableRipple","ListItemText","primary","ListItemSecondaryAction","IconButton","onClick","App","setTodos","todoText","trimmedText","trim","length","todoIndex","newTodos","filter","_","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAmDeA,EA7BE,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EAEHC,mBAAS,IAFN,mBAEtBC,EAFsB,KAEfC,EAFe,KAoB7B,OACI,0BAAMC,UAAU,YAAYC,SAjBf,SAACC,GACdA,EAAEC,iBACFP,EAASE,GACTC,EAAS,MAeL,2BACCD,MAAOA,EAAOM,SAbN,SAACF,GACdH,EAASG,EAAEG,OAAOP,QAYqBQ,QAAQ,WAC1CC,YAAY,wBAAwBC,WAAW,EAAMC,UAAW,GAAIC,MAAM,gB,iECHxEC,EAtBE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAKvB,OACI,kBAACC,EAAA,EAAD,CAAMd,UAAU,QACXY,EAAMG,KAAI,SAACC,EAAMC,GAAP,OACP,kBAACC,EAAA,EAAD,CAAUlB,UAAU,WAAWmB,IAAKF,EAAMG,WAAYC,OAAK,GAC3D,kBAACC,EAAA,EAAD,CAAUtB,UAAU,WAAWuB,UAAW,EAAGC,eAAa,EAACd,MAAM,cACjE,kBAACe,EAAA,EAAD,CAAczB,UAAU,eAAe0B,QAASV,IAChD,kBAACW,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,QAAS,WAAOhB,EAAWI,KACnC,kBAAC,IAAD,c,MCiBTa,MA1Bf,WAAgB,IAAD,EAEajC,mBAAS,IAFtB,mBAENe,EAFM,KAECmB,EAFD,KAiBb,OACE,yBAAK/B,UAAU,OACb,0CACA,kBAAC,EAAD,CAAUJ,SAhBG,SAACoC,GAChB,IAAMC,EAAcD,EAASE,OAE1BD,EAAYE,OAAS,GACtBJ,EAAS,GAAD,mBAAKnB,GAAL,CAAYqB,QAapB,kBAAC,EAAD,CAAUrB,MAAOA,EAAOC,WATT,SAACuB,GAClB,IAAMC,EAAWzB,EAAM0B,QAAO,SAACC,EAAGtB,GAAJ,OAAcA,IAAUmB,KACtDL,EAASM,QClCbG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.4c4cd7de.chunk.js","sourcesContent":["/**\n * \n * Install material ui via \n    * $ npm install @material-ui/core\n    * $ npm install @material-ui/icons\n    * $ npm install @material-ui/styles\n\n * \n * Import React && useState Hook\n * Import TextField from material ui\n * Create Form\n * Add onChange, onSubmit props to Form\n * Import this component in your App.js.\n *\n * Clear input in ToDoForm.js.\n * Once a todo’s saved, set the form state to an empty string.\n *\n */\n\nimport React, { useState } from 'react';\n// import TextField from '@material-ui/core/TextField'\n\nconst ToDoForm = ({saveTodo}) => {\n\n    const [value, setValue] = useState('');\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        saveTodo(value);\n        setValue('');\n    }\n\n    const onChange = (e) => {\n        setValue(e.target.value)\n    }\n\n    const textFieldProps = {\n        autoFocus: true,\n        maxLength: 50,\n        \n    }\n      \n    return(\n        <form className=\"todo-form\" onSubmit={onSubmit}>\n            <input\n             value={value} onChange={onChange} variant=\"outlined\" \n             placeholder=\"Need to do something?\" autoFocus={true} maxLength={50} color=\"secondary\"/>\n        </form>\n    )\n}\n\nexport default ToDoForm\n\n\n","/**\n * Import React\n * Import elements from materiel ui\n * Create List - ListItem - ListItemText - \n * ListItemSecondaryAction - ListIcon - DeleteIcon - Checkbox\n * \n * Create ToDoList component with two props\n    * todos: The array of todos. We map over each one and create a list item.\n    * deleteTodo: Clicking a todo’s IconButton fires this function. \n    * It passes the index, which will uniquely identify a todo in our list.\n    * Import this component in your App.js.\n * \n * \n */\n\nimport React from 'react';\nimport {List, ListItem, ListItemText, \n    ListItemSecondaryAction, IconButton, Checkbox } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n\nconst ToDoList = ({ todos, deleteTodo }) => {\n\n\n\n\n    return(\n        <List className=\"list\">\n            {todos.map((todo, index) => (\n                <ListItem className=\"listItem\" key={index.toString()} dense>\n                <Checkbox className=\"checkbox\" tabIndex={-1} disableRipple color='secondary' />\n                <ListItemText className=\"listItemText\" primary={todo} />\n                <ListItemSecondaryAction>\n                    <IconButton onClick={() => {deleteTodo(index)}}>\n                        <DeleteIcon />\n                    </IconButton>\n                </ListItemSecondaryAction>\n            </ListItem>\n            ))}\n        </List>\n    )\n}\n\nexport default ToDoList","/**\n * Clear project\n * Create a Component folder within Src folder\n * Create a ToDoForm.js file in Components\n * Create a ToDoList.js file in Components\n * \n * Display todos in a nice Material Design fashion\n * Allow adding todos via input\n * Delete todos\n * \n * \n * Create function save ToDo\n * (Simply merge the existing todos with our new one, \n * extra whitespace cut out.)\n * Add ToDoList props deletetodo with const filter \n * and set todos to new value\n * \n */\n\nimport React, { useState } from 'react';\nimport ToDoForm from './Components/ToDoForm';\nimport ToDoList from './Components/ToDoList';\nimport './App.css';\n\n\nfunction App() {\n\n  const [todos, setTodos] = useState([]);\n\n  const saveTodo = (todoText) => {\n    const trimmedText = todoText.trim();\n  \n    if(trimmedText.length > 0){\n      setTodos([...todos, trimmedText])\n    }\n  }\n\n  const deleteTodo = (todoIndex) => {\n    const newTodos = todos.filter((_, index) => index !== todoIndex);\n    setTodos(newTodos);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>To Do List</h1>\n      <ToDoForm saveTodo={saveTodo}/>\n      <ToDoList todos={todos} deleteTodo={deleteTodo} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}